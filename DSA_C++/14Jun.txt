//FIND MAX 1's from array
#include <iostream>

using namespace std;

int main() {

int n;
cin >> n;
int arr[n];

for(int i = 0; i < n; i++){
cin >> arr[i];
}


int max = 0;
int count = 0;

for(int i = 0; i < n; i++){
if(arr[i] == 1){
count++;
}
else{
count = 0;
}

if(count > max){
max = count;
}
}

if(count > max){
max = count;
}

cout << max;
}

//2d array logic


int max_so_far = 0;
int row = 0;

for(int i = 0; i < m; i++){

int count = 0;
int max_count = 0;

for(int j = 0; j < n; j++){
count = (arr[i][j] == 1) ? count + 1 : 0;
max_count = max(max_count, count);
}

max_count = max(max_count, count);

if(max_count > max_so_far){
row = i + 1;
max_so_far = max_count;
}

}



cout << max_so_far << " , " << row;
}

//Prime or not
#include <iostream>

using namespace std;

int main() {
int n;
cin>>n;
for(int i=2;i<n;i++){
    if(n%i==0){
    cout << "Not Prime" << endl;
    return 0;
    }
}
cout<<"prime";

}

//optimize code:
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
int n;
cin>>n;
for(int i=2;i<sqrt(n);i++){
    if(n%i==0){
    cout << "Not Prime" << endl;
    return 0;
    }
}
cout<<"prime";

}

// print prime numberes
#include <iostream>

using namespace std;

int main() {

int n;
cin >> n;

int count = 0;

for(int num = 2; count < n ; num++){


bool isPrime = true;

for(int i = 2; i < num; i++){
if(num % i == 0){
isPrime = false;
break;
}
}

if(isPrime == true){
count++;
cout << num << " ";
}

}


}